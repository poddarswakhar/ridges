diff --git a/api/src/socket/handlers/message_router.py b/api/src/socket/handlers/message_router.py
index a8be1e52..7f206edd 100644
--- a/api/src/socket/handlers/message_router.py
+++ b/api/src/socket/handlers/message_router.py
@@ -29,9 +29,9 @@ def check_websocket_ip_auth(websocket: WebSocket, event: str) -> bool:
         return True
     
     # Check IP whitelist
-    if client_ip not in WHITELISTED_VALIDATOR_IPS:
-        logger.warning(f"WebSocket {event} from non-whitelisted IP: {client_ip}")
-        return False
+    # if client_ip not in WHITELISTED_VALIDATOR_IPS:
+        # logger.warning(f"WebSocket {event} from non-whitelisted IP: {client_ip}")
+        # return False
     
     logger.debug(f"WebSocket {event} from whitelisted IP: {client_ip}")
     return True
@@ -91,4 +91,4 @@ async def route_message(
     
     else:
         logger.warning(f"Unknown event type: {event}")
-        return {"error": f"Unknown event type: {event}"} 
\ No newline at end of file
+        return {"error": f"Unknown event type: {event}"} 
diff --git a/api/src/utils/auth.py b/api/src/utils/auth.py
index 54691c82..34865eec 100644
--- a/api/src/utils/auth.py
+++ b/api/src/utils/auth.py
@@ -26,12 +26,12 @@ async def verify_request_ip_whitelist(
         # Empty whitelist = allow all IPs (warning logged at startup)
         return True
     
-    if client_ip not in WHITELISTED_VALIDATOR_IPS:
-        logger.warning(f"Request from non-whitelisted IP: {client_ip}. Whitelisted IPs: {WHITELISTED_VALIDATOR_IPS}")
-        raise HTTPException(
-            status_code=403,
-            detail="Access denied: IP not whitelisted"
-        )
+    # if client_ip not in WHITELISTED_VALIDATOR_IPS:
+        # logger.warning(f"Request from non-whitelisted IP: {client_ip}. Whitelisted IPs: {WHITELISTED_VALIDATOR_IPS}")
+        # raise HTTPException(
+            # status_code=403,
+            # detail="Access denied: IP not whitelisted"
+        # )
     
     logger.debug(f"Request from whitelisted IP: {client_ip}")
     return True
diff --git a/proxy/main.py b/proxy/main.py
index 65350521..c8d49fdb 100644
--- a/proxy/main.py
+++ b/proxy/main.py
@@ -56,10 +56,11 @@ def check_request_auth(http_request: Request, endpoint_type: str) -> None:
     """
     client_ip = get_client_ip(http_request)
     
+    return
     # First check: IP whitelist (if configured)
-    if WHITELISTED_VALIDATOR_IPS and client_ip in WHITELISTED_VALIDATOR_IPS:
+    # if WHITELISTED_VALIDATOR_IPS and client_ip in WHITELISTED_VALIDATOR_IPS:
         # IP is whitelisted, allow through
-        return
+        # return
     
     # Second check: Screener password (if configured)
     if SCREENER_PASSWORD:
@@ -371,4 +372,4 @@ async def inference_endpoint(request: InferenceRequest, http_request: Request):
 
 if __name__ == "__main__":
     print(f"Starting Chutes Proxy Server on {SERVER_HOST}:{SERVER_PORT}")
-    uvicorn.run(app, host=SERVER_HOST, port=SERVER_PORT) 
\ No newline at end of file
+    uvicorn.run(app, host=SERVER_HOST, port=SERVER_PORT) 
diff --git a/validator/sandbox/sandbox.py b/validator/sandbox/sandbox.py
index bc4eeccf..f1f661d1 100644
--- a/validator/sandbox/sandbox.py
+++ b/validator/sandbox/sandbox.py
@@ -10,6 +10,7 @@ from datetime import datetime, timezone
 from pathlib import Path
 from typing import TYPE_CHECKING, Optional, Dict, Any
 from ddtrace import tracer
+import traceback
 
 import docker
 from docker.errors import ImageNotFound, APIError
@@ -514,8 +515,8 @@ class Sandbox:
                 self.evaluation_run.pass_to_fail_success = json.dumps([])
                 
         except Exception as e:
-            logger.error(f"SWE-bench evaluation failed: {e}")
-            self.evaluation_run.error = f"SWE-bench evaluation failed: {str(e)}"
+            logger.error(f"SWE-bench evaluation failed: {traceback.format_exception(e)}")
+            self.evaluation_run.error = f"SWE-bench evaluation failed: {str(traceback.format_exception(e))}"
             self.evaluation_run.solved = False
     
     @tracer.wrap(resource="cleanup-sandbox")
